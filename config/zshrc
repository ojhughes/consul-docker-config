# If you come from bash you might have to change your $PATH.
# export PATH=$HOME/bin:/usr/local/bin:$PATH

# Path to your oh-my-zsh installation.
export ZSH=$HOME/.oh-my-zsh

# Set name of the theme to load. Optionally, if you set this to "random"
# it'll load a random theme each time that oh-my-zsh is loaded.
# See https://github.com/robbyrussell/oh-my-zsh/wiki/Themes
ZSH_THEME="sunaku"

# Uncomment the following line to use case-sensitive completion.
# CASE_SENSITIVE="true"

# Uncomment the following line to use hyphen-insensitive completion. Case
# sensitive completion must be off. _ and - will be interchangeable.
# HYPHEN_INSENSITIVE="true"

# Uncomment the following line to disable bi-weekly auto-update checks.
# DISABLE_AUTO_UPDATE="true"

# Uncomment the following line to change how often to auto-update (in days).
# export UPDATE_ZSH_DAYS=13

# Uncomment the following line to disable colors in ls.
# DISABLE_LS_COLORS="true"

# Uncomment the following line to disable auto-setting terminal title.
# DISABLE_AUTO_TITLE="true"

# Uncomment the following line to enable command auto-correction.
# ENABLE_CORRECTION="true"

# Uncomment the following line to display red dots whilst waiting for completion.
# COMPLETION_WAITING_DOTS="true"

# Uncomment the following line if you want to disable marking untracked files
# under VCS as dirty. This makes repository status check for large repositories
# much, much faster.
# DISABLE_UNTRACKED_FILES_DIRTY="true"

# Uncomment the following line if you want to change the command execution time
# stamp shown in the history command output.
# The optional three formats: "mm/dd/yyyy"|"dd.mm.yyyy"|"yyyy-mm-dd"
# HIST_STAMPS="mm/dd/yyyy"

# Would you like to use another custom folder than $ZSH/custom?
# ZSH_CUSTOM=/path/to/new-custom-folder

# Which plugins would you like to load? (plugins can be found in ~/.oh-my-zsh/plugins/*)
# Custom plugins may be added to ~/.oh-my-zsh/custom/plugins/
# Example format: plugins=(rails git textmate ruby lighthouse)
# Add wisely, as too many plugins slow down shell startup.
plugins=(git history-substring-search osx brew cf vi-mode)

source $ZSH/oh-my-zsh.sh

# User configuration

# export MANPATH="/usr/local/man:$MANPATH"

# You may need to manually set your language environment
# export LANG=en_US.UTF-8

# Preferred editor for local and remote sessions
# if [[ -n $SSH_CONNECTION ]]; then
#   export EDITOR='vim'
# else
#   export EDITOR='mvim'
# fi

# Compilation flags
# export ARCHFLAGS="-arch x86_64"

# ssh
# export SSH_KEY_PATH="~/.ssh/rsa_id"

# Set personal aliases, overriding those provided by oh-my-zsh libs,
# plugins, and themes. Aliases can be placed here, though oh-my-zsh
# users are encouraged to define aliases within the ZSH_CUSTOM folder.
# For a full list of active aliases, run `alias`.
#
# Example aliases
# alias zshconfig="mate ~/.zshrc"
# alias ohmyzsh="mate ~/.oh-my-zsh"
function boshenv() {

    function setenv() {
        if (which om | grep "not found"); then
            echo "'om' must be installed before using this script; see https://github.com/pivotal-cf/om#installation"
            return 1
        fi

        if (which bosh2 | grep "not found"); then
            echo "bosh v2 CLI must be installed before using this script; see https://bosh.io/docs/cli-v2.html#install"
            return 1
        fi

        if (which jq | grep "not found"); then
            echo "'jq' must be installed before using this script; see https://stedolan.github.io/jq/"
            return 1
        fi

        export OM_TARGET="$1"
        export OM_ADMIN="$2"
        export OM_PASSWORD="$3"

        # Unset BOSH_* env vars
        while read var; do unset $var; done < <(env | grep BOSH | cut -d'=' -f1)

        # Test om access
        TEST_COMMAND=$(om -t $OM_TARGET -k -u $OM_ADMIN curl -s -path /api/v0/deployed/products)
        if [ $? -ne 0 ]; then
            echo "Error: $TEST_COMMAND"
            return 1
        fi

        # Get director IP
        BOSH_PRODUCT_GUID=$(om -t $OM_TARGET -k -u $OM_ADMIN curl -s -path /api/v0/deployed/products/ | jq -r -c '.[] | select(.type | contains("p-bosh")) | .guid')
        export BOSH_ENVIRONMENT=$(om -t $OM_TARGET -k -u $OM_ADMIN curl -s -path /api/v0/deployed/products/$BOSH_PRODUCT_GUID/static_ips | jq -r '.[].ips[]')

        # Get director root cert
        export BOSH_CA_CERT="$(om -t $OM_TARGET -k -u $OM_ADMIN curl -s -path /api/v0/certificate_authorities | jq -r '.certificate_authorities[].cert_pem')"

        # Get director credentials
        export BOSH_USERNAME=$(om -t $OM_TARGET -k -u $OM_ADMIN curl -s -path /api/v0/deployed/director/credentials/director_credentials | jq -r '.credential.value.identity')
        export BOSH_PASSWORD=$(om -t $OM_TARGET -k -u $OM_ADMIN curl -s -path /api/v0/deployed/director/credentials/director_credentials | jq -r '.credential.value.password')

        # Log-in to get UAA token
        echo -e "$BOSH_USERNAME\n$BOSH_PASSWORD\n" | bosh2 log-in
        bosh2 env
    }

    if [ "$#" -eq 0 ]; then
        echo "Current environment is $BOSH_ENVIRONMENT"
    elif [ "$#" -eq 3 ]; then
        setenv "$1" "$2" "$3"
    else
        echo "Usage: $0 OM_TARGET OM_ADMIN_USERNAME OM_PASSWORD"
    fi
}
export GOPATH=$HOME/workspace/go
export PATH=$PATH:/usr/local/go/bin:$GOPATH/bin
alias vi=vim

function rgbpw() {
   pcf --target $1 cf-info | sed -n '1p' | cut -d':' -f2 | awk '{$1=$1};1'
}
function create-test-org() {
   cf create-org ollie && cf target -o ollie && cf create-space test && cf target -o ollie
}
target() {
    pcf --target $1 target
}
[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh
